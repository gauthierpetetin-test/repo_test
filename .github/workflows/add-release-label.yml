name: Add release label on PR and its linked issues when PR gets merged

on:
  pull_request:
    types:
      - closed

jobs:
  add_release_label:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Get issues to label (PR and linked issues)
        id: get_issues_to_label
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO="${{ github.repository }}"
          
          echo "Fetching PR #$PR_NUMBER in $REPO"
          PR_ISSUE=$(gh api repos/$REPO/pulls/$PR_NUMBER --jq '{number: .number, owner: .base.repo.owner.login, repo: .base.repo.name}')
              
          echo "Fetching linked issues for PR #$PR_NUMBER in $REPO and other repos"
          echo "Fetching linked issues for PR #$PR_NUMBER in $REPO and other repos"
          TIMELINE_EVENTS=$(gh api repos/$REPO/issues/$PR_NUMBER/timeline --jq ".[]")
          LINKED_ISSUES=$(echo "$TIMELINE_EVENTS" | jq "map(select(.event == \"linked\")) | .[] | {number: .issue.number, owner: .issue.repository.owner.login, repo: .issue.repository.name}")
          
          ALL_ISSUES_TO_LABEL="[$PR_ISSUE,${LINKED_ISSUES}]"
          echo "::set-output name=all_issues_to_label::${ALL_ISSUES_TO_LABEL}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Add release label to PR and linked issues
        uses: actions/github-script@v5
        with:
          script: |         
            // Next release cut number is defined thanks NEXT_RELEASE_CUT_NUMBER env variable.
            // NEXT_RELEASE_CUT_NUMBER is defined in section "Secrets and variables">"Actions">"Variables">"New repository variable" in the settings of this repo.
            // NEXT_RELEASE_CUT_NUMBER needs to be updated every time a new release is cut.
            // Example value: 6.5
            const next_release_cut_number = process.env.NEXT_RELEASE_CUT_NUMBER;
            if (!next_release_cut_number) {
              throw new Error("The NEXT_RELEASE_CUT_NUMBER environment variable is not defined.");
            }
            
            // Release label needs to indicate the next release cut number
            // Example release label: "release-6.5"
            const release_label = `release-{next_release_cut_number}`;
            
            const all_issues_to_label_json = ${{ steps.get_issues_to_label.outputs.all_issues_to_label }};
            const all_issues_to_label = all_issues_to_label_json ? JSON.parse(all_issues_to_label_json) : [];

            const addLabel = async (issue_number, owner, repo) => {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: issue_number,
                labels: [`release-${next_release_cut_number}`],
              });
            };

            // Add label to PR and linked issues
            for (const issue of all_issues_to_label) {
              await addLabel(issue.number, issue.owner, issue.repo);
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
